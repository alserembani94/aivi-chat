const {
    Schema,
    model,
} = require('mongoose');

// Note for mongoose
// There will be several predeclared parameter when creating document (object / row)
// id - this will be randomly generated, can be disabled by adding _id: false in config
// timestamps - can also be disabled by adding timestamps: false or any config in config

// Types of data (not same with nodejs types)
// String
// Number
// Date
// Buffer
// Boolean
// Mixed - Need to import from mongoose
// ObjectId - ID which generated by Mongoose, also need to import from mongoose
// Array
// Decimal128
// Map
// Schema
// For reference, visit https://mongoosejs.com/docs/schematypes.html

// Can remove when done

// Config not yet finalised
const configSchema = new Schema({
    rewardNotification: { type: Boolean, default: false },
    cardPromotion:      { type: Boolean, default: false },
    aiviPromotion:      { type: Boolean, default: false },
    budgetingApp:       { type: Boolean, default: false },
}, { _id: false });

const userSchema = new Schema({
    _id:        { type: String, required: true }, // this will be imported from AWS Cognito
    username:   { type: String, required: true },
    role:       { type: String, default: 'user' },
    config:     { type: configSchema, default: {} },
}, {
    // Mongoose Schema Configuration
    _id: false, // Disable auto generation of _id by mongoose
    timestamps: { createdAt: 'created_at', updatedAt: 'updated_at' },
});

// Virtual for conversation, will not be stored inside database
userSchema
.virtual('url')
.get(function() { return `/user/${this.id}` }); // Return url for specific with id

module.exports = model('user', userSchema);