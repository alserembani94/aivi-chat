const {
    Schema,
    model,
    // ObjectId,
} = require('mongoose');

// Note for mongoose
// There will be several predeclared parameter when creating document (object / row)
// id - this will be randomly generated, can be disabled by adding _id: false in config
// timestamps - can also be disabled by adding timestamps: false or any config in config

// Types of data (not same with nodejs types)
// String
// Number
// Date
// Buffer
// Boolean
// Mixed - Need to import from mongoose
// ObjectId - ID which generated by Mongoose, also need to import from mongoose
// Array
// Decimal128
// Map
// Schema
// For reference, visit https://mongoosejs.com/docs/schematypes.html

// Can remove when done

const actionSchema = new Schema({
    actionType:     { type: String, required: true, enum: [ "links", "images", "dropdown", "suggestedReply", "multipleOption" ] },
    content: {
        url:        { type: String },
        imageUrl:   { type: String },
        caption:    { type: String },
        optionList: [{
            label:  { type: String },
            value:  { type: String },
        }],
    },
    remarks: [String],
}, { _id: false });

const conversationItemSchema = new Schema({
    user:       { type: String, required: true },
    timestamp:  { type: Date, required: true, default: Date.now() },
    message:    { type: String, required: true },
    actions:    { type: actionSchema, default: undefined },
}, { _id: false });

const conversationSchema = new Schema({
    user:               { type: String, required: true, ref: 'user' }, // ref used for creating relationship
    lexSessionID:       { type: String },
    conversation_list:  [{ type: conversationItemSchema, required: true, default: {} }],
}, {
    // Mongoose Schema Configuration
    timestamps: { createdAt: 'created_at', updatedAt: 'updated_at' },
});

// Virtual for conversation, will not be stored inside database
conversationSchema
.virtual('url')
.get(function() { return `/conversation/${this._id}` }); // Return url for specific conversation with id

module.exports = model('conversation', conversationSchema);